WIND_DIRECTION = [
    # mode1
    [[[1], [3], [4, 5], [8, 9], [12], [15, 16], [19], [22,26], [25,30], [24, 29]],
    [[21], [18,22], [15,19], [12, 16], [10, 13, 17]],
    [[28], [23], [19,16], [15,12], [11,8], [7]]],
    # mode2
    [[[1], [2], [4,7], [11], [14], [18], [21, 22], [24,25], [26,29], [30], [27], [28]], 
    [[21, 22], [24,25], [26,29], [30], [27], [28], [23, 20], [16,17], [13], [10], [6], [3], [1]],
    [[28], [23, 20], [16,17], [13], [10], [6], [3], [1], [2], [4,7], [11], [14], [18], [21]]],
    # mode 3
    [[[1], [3], [6], [10], [13], [17], [20], [23, 28], [27], [26, 30], [25,29], [24], [21]], 
    [[21], [18], [14], [11], [7], [2,4], [1,3], [6], [10], [13], [17], [20], [23, 28]], 
    [[28], [27], [26, 30], [25,29], [24], [21], [18], [14], [11], [7], [2,4], [1]]]
]

class Wind:
    def __init__(self, mode, sp):
        self.index = -1
        self.mode = mode
        self.sp = sp
        self.max_index = len(WIND_DIRECTION[self.mode][self.sp])

    def get_next(self):
        self.index += 1
        next_positions = WIND_DIRECTION[self.mode][self.sp][self.index]
        return next_positions

    def is_alive(self):
        if self.index < self.max_index-1:
            return True
        else:
            return False